# AEON Platform Celery Worker Dockerfile
FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app

# Set work directory
WORKDIR /app

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        libpq-dev \
        gcc \
        ffmpeg \
        libsm6 \
        libxext6 \
        libfontconfig1 \
        libxrender1 \
        libgl1-mesa-glx \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r aeon && useradd -r -g aeon aeon

# Copy requirements first for better caching
COPY requirements.txt /app/
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY services/ /app/services/
COPY deployment/entrypoint-worker.sh /app/entrypoint.sh

# Create necessary directories
RUN mkdir -p /app/logs /app/temp \
    && chown -R aeon:aeon /app

# Make entrypoint executable
RUN chmod +x /app/entrypoint.sh

# Switch to non-root user
USER aeon

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD celery -A services.worker.worker inspect ping || exit 1

# Run the worker
ENTRYPOINT ["/app/entrypoint.sh"]
CMD ["celery", "-A", "services.worker.worker", "worker", "--loglevel=info", "--concurrency=2"]
